{"version":3,"sources":["Components/login.js","Components/books.js","Components/authors.js","Components/home.js","Components/register.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","React","useState","email","setEmail","password","setPassword","history","useHistory","handleChange","event","name","target","value","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","onSubmit","data","axios","post","headers","then","response","console","log","status","localStorage","setItem","token","push","catch","error","alert","preventDefault","TextField","required","fullWidth","id","label","autoFocus","onChange","type","Button","color","Grid","container","item","Link","href","APIBaseURL","Books","props","setState","state","bookData","editDialogOpen","showNewAuthor","edit_name","edit_arrAuthors","edit_arrGenres","edit_id","delete_id","genreData","authorData","newAuthorName","dialogHeader","dialogButtonText","filter_genre","filter_author","openEditDialog","bind","handleClose","showHideField","saveNewAuthor","getData","onSelectTag_gen","onSelectTag_auth","updateBook","openDeleteDialog","deleteBook","handleDelDialogClose","local","this","get","getItem","results","jsonData","JSON","parse","author","genre","flag","e","arrAuthors","arrGenre","i","length","j","put","Id","deleteDialogOpen","delete","url","paper1","border","select","xs","direction","justify","onClick","FormControl","InputLabel","Select","labelId","style","map","MenuItem","filterResult","flexGrow","Paper","height","stringify","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Autocomplete","multiple","options","getOptionLabel","option","filterSelectedOptions","renderInput","params","placeholder","DialogActions","aria-describedby","Component","Authors","authorData_nob","books","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","root","background","Home","setValue","removeItem","AppBar","position","Tabs","newValue","aria-label","centered","Tab","SignUp","password2","setPassword2","firstName","setfName","lastName","setlName","useRef","ref","undefined","sm","validators","errorMessages","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1cbcdb1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    let history = useHistory();    \r\n\r\n    const handleSubmit = (event) => {\r\n        let data = {\r\n            \"email\": email,\r\n            \"password\": password\r\n        };\r\n        axios.post('http://ec2-13-235-103-88.ap-south-1.compute.amazonaws.com/api/v1/users/login/', data , {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 200) {\r\n                    localStorage.setItem('token', response.data.token);\r\n                    history.push(\"/home\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);       \r\n                alert('Invalid username.password')\r\n            });\r\n\r\n       // alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n    }\r\n    const handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name == 'email')\r\n            setEmail(value);\r\n        else if (name == 'password')\r\n            setPassword(value);            \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoFocus\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>                       \r\n                        <Grid item>\r\n                            <Link href=\"/register\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst APIBaseURL = 'http://ec2-13-235-103-88.ap-south-1.compute.amazonaws.com/api/v1';\r\n\r\nexport default class Books extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookData: [],\r\n            editDialogOpen: false,\r\n            showNewAuthor: false,\r\n            edit_name: '',\r\n            edit_arrAuthors: [],\r\n            edit_arrGenres: [],\r\n            edit_id: 0,\r\n            delete_id:0,\r\n            genreData: [],\r\n            authorData: [],\r\n            newAuthorName: '',\r\n            dialogHeader:'Edit Book',\r\n            dialogButtonText: 'Update',\r\n            filter_genre: null,\r\n            filter_author:null\r\n        }\r\n        this.openEditDialog = this.openEditDialog.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.showHideField = this.showHideField.bind(this);\r\n        this.saveNewAuthor = this.saveNewAuthor.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this.onSelectTag_gen = this.onSelectTag_gen.bind(this);\r\n        this.onSelectTag_auth = this.onSelectTag_auth.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);       \r\n        this.updateBook = this.updateBook.bind(this);\r\n        this.openDeleteDialog = this.openDeleteDialog.bind(this);\r\n        this.deleteBook = this.deleteBook.bind(this);\r\n        this.handleDelDialogClose = this.handleDelDialogClose.bind(this);\r\n    }\r\n\r\n    getData() {\r\n        let local = this;\r\n        axios.get(APIBaseURL + '/books/list/', {\r\n            headers: {\r\n                \"authorization\": localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 200) {\r\n                    local.setState({ bookData: response.data.results });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        axios.get(APIBaseURL+'/books/genres/', {\r\n            headers: {\r\n                \"authorization\": localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 200) {\r\n                    local.setState({ genreData: response.data.results });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        axios.get(APIBaseURL + '/users/authors/', {\r\n            headers: {\r\n                \"authorization\": localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 200) {\r\n                    local.setState({ authorData: response.data.results });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    openEditDialog(jsonData) {\r\n        if (jsonData == null) {\r\n            this.setState({\r\n                editDialogOpen: true,\r\n                edit_id: 0,\r\n                edit_arrAuthors: [],\r\n                edit_arrGenres: [],\r\n                edit_name: '',\r\n                dialogButtonText: 'Save',\r\n                dialogHeader : 'Add Book'\r\n            });\r\n        }\r\n        else {\r\n            let data = JSON.parse(jsonData);\r\n            this.setState({\r\n                editDialogOpen: true,\r\n                edit_id: data.id,\r\n                edit_arrAuthors: data.author,\r\n                edit_arrGenres: data.genre,\r\n                edit_name: data.name,\r\n                dialogButtonText: 'Update',\r\n                dialogHeader: 'Edit Book'\r\n            });\r\n        }        \r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ editDialogOpen: false });\r\n    }\r\n\r\n    showHideField(flag) {\r\n        this.setState({ showNewAuthor: flag });\r\n    }\r\n\r\n    saveNewAuthor() {\r\n        let local = this;\r\n        let data = {\r\n            \"name\":this.state.newAuthorName\r\n        };\r\n\r\n        axios.post(APIBaseURL+'/users/author/create', data, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"authorization\": localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 201) {\r\n                    local.setState({\r\n                        authorData: [...local.state.authorData, response.data],\r\n                        edit_arrAuthors: [...local.state.edit_arrAuthors, response.data],\r\n                        newAuthorName: '',\r\n                        showNewAuthor:false\r\n                    })                                         \r\n                    //localStorage.setItem('token', response.data.token);\r\n                    //this.context.router.push('/home');\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);                \r\n                    alert('something went wrong');\r\n                //history.push(\"/home\");\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({[name]:value});\r\n    }\r\n    \r\n    onSelectTag_gen(e, value) {\r\n        this.setState({\r\n            edit_arrGenres: value\r\n        })\r\n    }\r\n\r\n    onSelectTag_auth(e, value) {\r\n        this.setState({\r\n            edit_arrAuthors: value\r\n        })\r\n    }\r\n\r\n    updateBook() {            \r\n        let local = this;\r\n        let arrAuthors = [], arrGenre = [];\r\n        for (var i = 0; i < this.state.edit_arrAuthors.length; i++) {\r\n            arrAuthors.push(this.state.edit_arrAuthors[i].id);\r\n        }\r\n        for (var j = 0; j < this.state.edit_arrGenres.length; j++) {\r\n            arrGenre.push(this.state.edit_arrGenres[j].id);\r\n        }\r\n\r\n        let data = {\r\n            \"name\": this.state.edit_name,\r\n            \"author\": arrAuthors,\r\n            \"genre\": arrGenre\r\n        };   \r\n\r\n        let url;\r\n\r\n        if (this.state.edit_id > 0) {\r\n            axios.put(APIBaseURL+'/books/' + this.state.edit_id +'/', data, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"authorization\": localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 201) {   \r\n                    local.setState({\r\n                        editDialogOpen: false\r\n                    });\r\n                    local.getData();\r\n                }\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(error.response);\r\n                        alert('something went wrong');\r\n                });\r\n        }\r\n        else {\r\n            axios.post(APIBaseURL+'/books/', data, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'authorization': localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 201) {\r\n                    local.setState({\r\n                        editDialogOpen: false\r\n                    });\r\n                    local.getData();\r\n                }\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(error.response);\r\n                        alert('something went wrong');\r\n                });\r\n        }\r\n    }\r\n\r\n    openDeleteDialog(Id) {        \r\n            this.setState({\r\n                deleteDialogOpen: true,\r\n                delete_id:Id\r\n            });\r\n    }\r\n\r\n    deleteBook() {\r\n        let local = this;\r\n        axios.delete(APIBaseURL + '/books/' + this.state.delete_id + '/', {\r\n            headers: {\r\n                'authorization': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 201) {\r\n                    local.setState({\r\n                        deleteDialogOpen: false\r\n                    });\r\n                    local.getData();\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                alert('something went wrong');\r\n            });\r\n    }\r\n\r\n    handleDelDialogClose() {\r\n        this.setState({\r\n            deleteDialogOpen: false\r\n        });\r\n    }\r\n\r\n    filterResult() {\r\n        let local = this;\r\n\r\n        let url = APIBaseURL+'/books/list';\r\n\r\n        if (this.state.filter_genre != null && this.state.filter_author != null)\r\n            url += '?genre__id=' + this.state.filter_genre + '&author__id='+this.state.filter_author;\r\n        else if (this.state.filter_genre != null)\r\n            url += '?genre__id=' + this.state.filter_genre;\r\n        else\r\n            url += '?author__id='+this.state.filter_author;\r\n\r\n\r\n        axios.get(url, {\r\n            headers: {\r\n                'authorization': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 200) {\r\n                    local.setState({ bookData: response.data.results });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const root = {\r\n            flexGrow: 1,\r\n        };\r\n        const paper = {\r\n            height: 40,\r\n            width: 600,\r\n            'background-color': '#f50057'\r\n        };\r\n        const paper1 = {\r\n            'min-height': '40',\r\n            width: 600,\r\n            border: 1\r\n        };   \r\n        const select = {            \r\n            width: 200,\r\n            border: 1,\r\n            margin : 20\r\n        };   \r\n\r\n        return (\r\n            <div>\r\n                <Grid xs={12} container direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\">\r\n                    <div xs={2}><Button variant=\"contained\" color=\"primary\" onClick={() => { this.openEditDialog(null) }}>Add New Book</Button></div>\r\n                </Grid>\r\n                <Grid xs={12} container direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\">            \r\n                    <span>Filter By: </span>\r\n\r\n                    <FormControl>\r\n                        <InputLabel id=\"demo-simple-select-label\">Genre</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.filter_genre}\r\n                            onChange={this.handleChange}\r\n                            name=\"filter_genre\"\r\n                            style={select}\r\n                        >\r\n                            {\r\n                                this.state.genreData.map((item, i) => (<MenuItem value={item.id}>{item.name}</MenuItem>))\r\n                            }  \r\n                        </Select>\r\n                    </FormControl>               \r\n                    <FormControl>\r\n                        <InputLabel id=\"demo-simple-select-label1\">Author</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label1\"\r\n                            id=\"demo-simple-select1\"\r\n                            value={this.state.filter_author}\r\n                            onChange={this.handleChange}\r\n                            name=\"filter_author\"\r\n                            style={select}\r\n                        >\r\n                            {\r\n                                this.state.authorData.map((item, i) => (<MenuItem value={item.id}>{item.name}</MenuItem>))\r\n                            }\r\n                        </Select>\r\n                    </FormControl>                    \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.filterResult() }}>Apply Filters</Button>\r\n                </Grid>\r\n                <Grid container direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\" style={root} spacing=\"0\">\r\n                    <Grid item xs={9}>\r\n                        <Paper style={paper} xs={12}>\r\n                            <Grid container justify=\"center\" spacing=\"0\">\r\n                                <Grid item xs={3}><span>Book</span></Grid>\r\n                                <Grid item xs={3}><span>Author(s)</span></Grid>\r\n                                <Grid item xs={3}><span>Genre(s)</span></Grid>\r\n                                <Grid item xs={3}><span>Actions</span></Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    {this.state.bookData.map(value => (\r\n                        <Grid item xs={9}>\r\n                            <Paper style={paper1} xs={12}>\r\n                                <Grid container justify=\"center\" spacing=\"0\">\r\n                                    <Grid item xs={3}><span>{value.name}</span></Grid>\r\n                                    <Grid item xs={3}><ul>{value.author.map((item, i) => (<li>{item.name}</li>))}</ul></Grid>\r\n                                    <Grid item xs={3}><ul>{value.genre.map((item, i) => (<li>{item.name}</li>))}</ul></Grid>   \r\n                                    <Grid item xs={3}><span><EditIcon onClick={() => { this.openEditDialog(JSON.stringify(value)) }} /><DeleteIcon onClick={() => { this.openDeleteDialog(value.id) }}/></span></Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n\r\n                <Dialog open={this.state.editDialogOpen} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">{this.state.dialogHeader}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"Book\"\r\n                            label=\"Book\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.edit_name}   \r\n                            onChange={this.handleChange}\r\n                            name=\"edit_name\"\r\n                        />                       \r\n                        <Autocomplete\r\n                            multiple\r\n                            id=\"tags-standard\"\r\n                            options={this.state.genreData}\r\n                            getOptionLabel={option => option.name}\r\n                            value={this.state.edit_arrGenres}\r\n                            onChange={this.onSelectTag_gen}\r\n                            filterSelectedOptions\r\n                            renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    variant=\"standard\"\r\n                                    label=\"Genere(s)\"\r\n                                    placeholder=\"Favorites\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Autocomplete\r\n                            multiple\r\n                            id=\"tags-standard\"\r\n                            options={this.state.authorData}\r\n                            getOptionLabel={option => option.name}\r\n                            value={this.state.edit_arrAuthors}\r\n                            onChange={this.onSelectTag_auth}\r\n                            filterSelectedOptions\r\n                            renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    variant=\"standard\"\r\n                                    label=\"Author(s)\"\r\n                                    placeholder=\"Favorites\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {!this.state.showNewAuthor && <Button onClick={() => { this.showHideField(true) }} color=\"primary\">\r\n                            Add New Author\r\n                        </Button>}\r\n                        {this.state.showNewAuthor && <div>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                id=\"txtNewAuthor\"\r\n                                label=\"Author name\"\r\n                                type=\"text\"\r\n                                name=\"newAuthorName\"\r\n                                fullWidth\r\n                                value={this.state.newAuthorName}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <Button onClick={() => { this.showHideField(false) }} color=\"primary\">\r\n                                Cancel\r\n                        </Button>\r\n                            <Button onClick={() => { this.saveNewAuthor() }} color=\"primary\">\r\n                                Save Author\r\n                        </Button>\r\n                        </div>}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.updateBook} color=\"primary\">\r\n                            {this.state.dialogButtonText}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.deleteDialogOpen}\r\n                    onClose={this.handleDelDialogClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">Delete Book</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Are you sure want to delete the selected book?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDelDialogClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.deleteBook} color=\"primary\" autoFocus>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from 'axios';\r\n\r\nconst APIBaseURL = 'http://ec2-13-235-103-88.ap-south-1.compute.amazonaws.com/api/v1';\r\nexport default class Authors extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            authorData: [],\r\n            authorData_nob: []\r\n        }    \r\n    }\r\n\r\n    componentDidMount() {\r\n        let local = this;\r\n        axios.get(APIBaseURL+'/books/author/1', {\r\n            headers: {\r\n                'authorization': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 200) {\r\n                    local.setState({ authorData: response.data.results });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        axios.get(APIBaseURL+'/books/author/0', {\r\n            headers: {\r\n                'authorization': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 200) {\r\n                    local.setState({ authorData_nob: response.data.results });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        const root = {\r\n            flexGrow: 1,\r\n        };\r\n        const paper = {\r\n            height: 40,\r\n            width: 500,\r\n            'background-color': '#f50057'\r\n        };\r\n        const paper1 = {\r\n            \r\n            width: 500\r\n        };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Grid container style={root} spacing=\"0\">\r\n                    <Grid item xs={6}>\r\n                        <h3>Authors with books</h3>\r\n                    <Grid item xs={10}>\r\n                        <Paper style={paper}>\r\n                            <Grid container justify=\"center\" spacing=\"0\">                                \r\n                                <Grid item xs={6}><span>Author Name</span></Grid>\r\n                                <Grid item xs={6}><span>List of Books</span></Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                        {this.state.authorData.map(value => (\r\n                            <Grid item xs={10}>\r\n                                <Paper style={paper1} xs={12}>\r\n                                    <Grid container justify=\"center\" spacing=\"0\">\r\n                                        <Grid item xs={6}><span>{value.name}</span></Grid>\r\n                                        <Grid item xs={6}><ul>{value.books.map((item, i) => (<li>{item.name}</li>))}</ul></Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                        ))}                        \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <h3>Authors without books</h3>\r\n                        <Grid item xs={10}>\r\n                            <Paper style={paper}>\r\n                                <Grid container justify=\"center\" spacing=\"0\">\r\n                                    <Grid item xs={6}><span>Author Name</span></Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        {this.state.authorData_nob.map(value => (\r\n                            <Grid item xs={10}>\r\n                                <Paper style={paper1} xs={12}>\r\n                                    <Grid container justify=\"center\" spacing=\"0\">\r\n                                        <Grid item xs={6}><span>{value.name}</span></Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Books from './books';\r\nimport Authors from './authors';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    let history = useHistory();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('token');\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid xs={12} container direction=\"row\"\r\n                justify=\"flex-end\"\r\n                alignItems=\"center\">\r\n                <div xs={2}><Button variant=\"contained\" color=\"primary\" onClick={logOut}>LogOut</Button></div>\r\n            </Grid>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" centered variant=\"fullWidth\">\r\n                    <Tab label=\"Books\" {...a11yProps(0)} />\r\n                    <Tab label=\"Authors\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <Books/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Authors/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [password2, setPassword2] = React.useState('');\r\n    const [firstName, setfName] = React.useState('');\r\n    const [lastName, setlName] = React.useState('');\r\n\r\n    let history = useHistory();\r\n    let form = React.useRef();\r\n    const handleSubmit = (event) => {\r\n        let data = {\r\n            \"first_name\": firstName,\r\n            \"last_name\":lastName,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"password2\": password2\r\n        };\r\n        axios.post('http://ec2-13-235-103-88.ap-south-1.compute.amazonaws.com/api/v1/users/register/', data, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status == 201) {\r\n                    //localStorage.setItem('token', response.data.token);\r\n                    //this.context.router.push('/home');\r\n                    alert('your account created');\r\n                    history.push(\"/\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                if (error.response.status == 400 && error.response.data != undefined && error.response.data != null) {\r\n                    alert(error.response.data.email[0]);\r\n                }\r\n                else\r\n                    alert('something went wrong');\r\n                //history.push(\"/home\");\r\n            });\r\n\r\n        // alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n    }\r\n    const handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        switch (name) {\r\n            case 'email':\r\n                setEmail(value);\r\n                break;\r\n            case 'password':\r\n                setPassword(value);\r\n                break;\r\n            case 'password2':\r\n                setPassword2(value);\r\n                break;\r\n            case 'firstName':\r\n                setfName(value);\r\n                break;\r\n            case 'lastName':\r\n                setlName(value);\r\n                break;\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <ValidatorForm ref={form} className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextValidator\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                value={firstName}\r\n                                onChange={handleChange}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                value={lastName}\r\n                                onChange={handleChange}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleChange}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\" \r\n                                value={password}\r\n                                onChange={handleChange}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password2\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                value={password2}\r\n                                onChange={handleChange}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </ValidatorForm>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\nimport './App.css';\nimport Login from './Components/login';\nimport Home from './Components/home';\nimport Books from './Components/books';\nimport Authors from './Components/authors';\nimport SignIn from './Components/login';\nimport Register from './Components/register';\nfunction App() {\n  return (\n    <div className=\"App\">\n          <Router>\r\n              <div>                 \r\n                  <Switch>\r\n                      <Route exact path=\"/\">\r\n                          <SignIn />\r\n                      </Route>\r\n                      <Route exact path=\"/register\">\r\n                          <Register />\r\n                      </Route>\r\n                      <Route exact path=\"/home\">\r\n                          <Home />\r\n                      </Route>\r\n                      <Route path=\"/books\">\r\n                          <Books />\r\n                      </Route>\r\n                      <Route path=\"/authors\">\r\n                          <Authors />\r\n                      </Route>\r\n                  </Switch>\r\n              </div>\r\n          </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}